/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Gooey from "../../../../index";

/**
 * @example
 *     {
 *         searchQuery: "search_query"
 *     }
 */
export interface RelatedQnADocPageRequest {
    exampleId?: string;
    functions?: Gooey.RecipeFunction[];
    /** Variables to be used as Jinja prompt templates and in functions as arguments */
    variables?: Record<string, unknown>;
    searchQuery: string;
    keywordQuery?: Gooey.RelatedQnADocPageRequestKeywordQuery;
    documents?: string[];
    maxReferences?: number;
    maxContextWords?: number;
    scrollJump?: number;
    docExtractUrl?: string;
    embeddingModel?: Gooey.RelatedQnADocPageRequestEmbeddingModel;
    /**
     * Weightage for dense vs sparse embeddings. `0` for sparse, `1` for dense, `0.5` for equal weight.
     * Generally speaking, dense embeddings excel at understanding the context of the query, whereas sparse vectors excel at keyword matches.
     *
     */
    denseWeight?: number;
    taskInstructions?: string;
    queryInstructions?: string;
    selectedModel?: Gooey.RelatedQnADocPageRequestSelectedModel;
    citationStyle?: Gooey.RelatedQnADocPageRequestCitationStyle;
    avoidRepetition?: boolean;
    numOutputs?: number;
    quality?: number;
    maxTokens?: number;
    samplingTemperature?: number;
    responseFormatType?: Gooey.RelatedQnADocPageRequestResponseFormatType;
    serpSearchLocation?: Gooey.SerpSearchLocation;
    /** DEPRECATED: use `serp_search_location` instead */
    scaleserpLocations?: string[];
    serpSearchType?: Gooey.SerpSearchType;
    /** DEPRECATED: use `serp_search_type` instead */
    scaleserpSearchField?: string;
    settings?: Gooey.RunSettings;
}
