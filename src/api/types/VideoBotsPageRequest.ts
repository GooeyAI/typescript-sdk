/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Gooey from "../index";

export interface VideoBotsPageRequest {
    functions?: Gooey.RecipeFunction[];
    /** Variables to be used as Jinja prompt templates and in functions as arguments */
    variables?: Record<string, unknown>;
    inputPrompt?: string;
    inputAudio?: string;
    inputImages?: string[];
    inputDocuments?: string[];
    /** Select a workflow to extract text from documents and images. */
    docExtractUrl?: string;
    messages?: Gooey.ConversationEntry[];
    botScript?: string;
    selectedModel?: Gooey.VideoBotsPageRequestSelectedModel;
    /** When your copilot users upload a photo or pdf, what kind of document are they mostly likely to upload? (via [Azure](https://learn.microsoft.com/en-us/azure/ai-services/document-intelligence/how-to-guides/use-sdk-rest-api?view=doc-intel-3.1.0&tabs=linux&pivots=programming-language-rest-api)) */
    documentModel?: string;
    avoidRepetition?: boolean;
    numOutputs?: number;
    quality?: number;
    maxTokens?: number;
    samplingTemperature?: number;
    taskInstructions?: string;
    queryInstructions?: string;
    keywordInstructions?: string;
    documents?: string[];
    maxReferences?: number;
    maxContextWords?: number;
    scrollJump?: number;
    embeddingModel?: Gooey.VideoBotsPageRequestEmbeddingModel;
    /**
     * Weightage for dense vs sparse embeddings. `0` for sparse, `1` for dense, `0.5` for equal weight.
     * Generally speaking, dense embeddings excel at understanding the context of the query, whereas sparse vectors excel at keyword matches.
     */
    denseWeight?: number;
    citationStyle?: Gooey.VideoBotsPageRequestCitationStyle;
    useUrlShortener?: boolean;
    /** Choose a model to transcribe incoming audio messages to text. */
    asrModel?: Gooey.VideoBotsPageRequestAsrModel;
    /** Choose a language to transcribe incoming audio messages to text. */
    asrLanguage?: string;
    translationModel?: Gooey.VideoBotsPageRequestTranslationModel;
    /** Choose a language to translate incoming text & audio messages to English and responses back to your selected language. Useful for low-resource languages. */
    userLanguage?: string;
    /** Translation Glossary for User Langauge -> LLM Language (English) */
    inputGlossaryDocument?: string;
    /** Translation Glossary for LLM Language (English) -> User Langauge */
    outputGlossaryDocument?: string;
    lipsyncModel?: Gooey.VideoBotsPageRequestLipsyncModel;
    /** Give your copilot superpowers by giving it access to tools. Powered by [Function calling](https://platform.openai.com/docs/guides/function-calling). */
    tools?: Gooey.LlmTools[];
    ttsProvider?: Gooey.VideoBotsPageRequestTtsProvider;
    uberduckVoiceName?: string;
    uberduckSpeakingRate?: number;
    googleVoiceName?: string;
    googleSpeakingRate?: number;
    googlePitch?: number;
    barkHistoryPrompt?: string;
    /** Use `elevenlabs_voice_id` instead */
    elevenlabsVoiceName?: string;
    elevenlabsApiKey?: string;
    elevenlabsVoiceId?: string;
    elevenlabsModel?: string;
    elevenlabsStability?: number;
    elevenlabsSimilarityBoost?: number;
    elevenlabsStyle?: number;
    elevenlabsSpeakerBoost?: boolean;
    azureVoiceName?: string;
    openaiVoiceName?: Gooey.VideoBotsPageRequestOpenaiVoiceName;
    openaiTtsModel?: Gooey.VideoBotsPageRequestOpenaiTtsModel;
    inputFace?: string;
    facePaddingTop?: number;
    facePaddingBottom?: number;
    facePaddingLeft?: number;
    facePaddingRight?: number;
    sadtalkerSettings?: Gooey.SadTalkerSettings;
    settings?: Gooey.RunSettings;
}
