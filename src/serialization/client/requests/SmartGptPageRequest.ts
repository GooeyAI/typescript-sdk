/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../index";
import * as Gooey from "../../../api/index";
import * as core from "../../../core";
import { RecipeFunction } from "../../types/RecipeFunction";
import { SmartGptPageRequestSelectedModel } from "../../types/SmartGptPageRequestSelectedModel";
import { SmartGptPageRequestResponseFormatType } from "../../types/SmartGptPageRequestResponseFormatType";
import { RunSettings } from "../../types/RunSettings";

export const SmartGptPageRequest: core.serialization.Schema<
    serializers.SmartGptPageRequest.Raw,
    Omit<Gooey.SmartGptPageRequest, "exampleId">
> = core.serialization.object({
    functions: core.serialization.list(RecipeFunction).optional(),
    variables: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    inputPrompt: core.serialization.property("input_prompt", core.serialization.string()),
    cotPrompt: core.serialization.property("cot_prompt", core.serialization.string().optional()),
    reflexionPrompt: core.serialization.property("reflexion_prompt", core.serialization.string().optional()),
    deraPrompt: core.serialization.property("dera_prompt", core.serialization.string().optional()),
    selectedModel: core.serialization.property("selected_model", SmartGptPageRequestSelectedModel.optional()),
    avoidRepetition: core.serialization.property("avoid_repetition", core.serialization.boolean().optional()),
    numOutputs: core.serialization.property("num_outputs", core.serialization.number().optional()),
    quality: core.serialization.number().optional(),
    maxTokens: core.serialization.property("max_tokens", core.serialization.number().optional()),
    samplingTemperature: core.serialization.property("sampling_temperature", core.serialization.number().optional()),
    responseFormatType: core.serialization.property(
        "response_format_type",
        SmartGptPageRequestResponseFormatType.optional()
    ),
    settings: RunSettings.optional(),
});

export declare namespace SmartGptPageRequest {
    interface Raw {
        functions?: RecipeFunction.Raw[] | null;
        variables?: Record<string, unknown> | null;
        input_prompt: string;
        cot_prompt?: string | null;
        reflexion_prompt?: string | null;
        dera_prompt?: string | null;
        selected_model?: SmartGptPageRequestSelectedModel.Raw | null;
        avoid_repetition?: boolean | null;
        num_outputs?: number | null;
        quality?: number | null;
        max_tokens?: number | null;
        sampling_temperature?: number | null;
        response_format_type?: SmartGptPageRequestResponseFormatType.Raw | null;
        settings?: RunSettings.Raw | null;
    }
}
