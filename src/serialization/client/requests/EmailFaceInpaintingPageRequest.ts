/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../index";
import * as Gooey from "../../../api/index";
import * as core from "../../../core";
import { RecipeFunction } from "../../types/RecipeFunction";
import { EmailFaceInpaintingPageRequestSelectedModel } from "../../types/EmailFaceInpaintingPageRequestSelectedModel";
import { RunSettings } from "../../types/RunSettings";

export const EmailFaceInpaintingPageRequest: core.serialization.Schema<
    serializers.EmailFaceInpaintingPageRequest.Raw,
    Omit<Gooey.EmailFaceInpaintingPageRequest, "exampleId">
> = core.serialization.object({
    functions: core.serialization.list(RecipeFunction).optional(),
    variables: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    emailAddress: core.serialization.property("email_address", core.serialization.string().optional()),
    twitterHandle: core.serialization.property("twitter_handle", core.serialization.string().optional()),
    textPrompt: core.serialization.property("text_prompt", core.serialization.string()),
    faceScale: core.serialization.property("face_scale", core.serialization.number().optional()),
    facePosX: core.serialization.property("face_pos_x", core.serialization.number().optional()),
    facePosY: core.serialization.property("face_pos_y", core.serialization.number().optional()),
    selectedModel: core.serialization.property(
        "selected_model",
        EmailFaceInpaintingPageRequestSelectedModel.optional()
    ),
    negativePrompt: core.serialization.property("negative_prompt", core.serialization.string().optional()),
    numOutputs: core.serialization.property("num_outputs", core.serialization.number().optional()),
    quality: core.serialization.number().optional(),
    upscaleFactor: core.serialization.property("upscale_factor", core.serialization.number().optional()),
    outputWidth: core.serialization.property("output_width", core.serialization.number().optional()),
    outputHeight: core.serialization.property("output_height", core.serialization.number().optional()),
    guidanceScale: core.serialization.property("guidance_scale", core.serialization.number().optional()),
    shouldSendEmail: core.serialization.property("should_send_email", core.serialization.boolean().optional()),
    emailFrom: core.serialization.property("email_from", core.serialization.string().optional()),
    emailCc: core.serialization.property("email_cc", core.serialization.string().optional()),
    emailBcc: core.serialization.property("email_bcc", core.serialization.string().optional()),
    emailSubject: core.serialization.property("email_subject", core.serialization.string().optional()),
    emailBody: core.serialization.property("email_body", core.serialization.string().optional()),
    emailBodyEnableHtml: core.serialization.property("email_body_enable_html", core.serialization.boolean().optional()),
    fallbackEmailBody: core.serialization.property("fallback_email_body", core.serialization.string().optional()),
    seed: core.serialization.number().optional(),
    settings: RunSettings.optional(),
});

export declare namespace EmailFaceInpaintingPageRequest {
    interface Raw {
        functions?: RecipeFunction.Raw[] | null;
        variables?: Record<string, unknown> | null;
        email_address?: string | null;
        twitter_handle?: string | null;
        text_prompt: string;
        face_scale?: number | null;
        face_pos_x?: number | null;
        face_pos_y?: number | null;
        selected_model?: EmailFaceInpaintingPageRequestSelectedModel.Raw | null;
        negative_prompt?: string | null;
        num_outputs?: number | null;
        quality?: number | null;
        upscale_factor?: number | null;
        output_width?: number | null;
        output_height?: number | null;
        guidance_scale?: number | null;
        should_send_email?: boolean | null;
        email_from?: string | null;
        email_cc?: string | null;
        email_bcc?: string | null;
        email_subject?: string | null;
        email_body?: string | null;
        email_body_enable_html?: boolean | null;
        fallback_email_body?: string | null;
        seed?: number | null;
        settings?: RunSettings.Raw | null;
    }
}
