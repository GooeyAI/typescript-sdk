/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../index";
import * as Gooey from "../../../api/index";
import * as core from "../../../core";
import { RecipeFunction } from "../../types/RecipeFunction";
import { Img2ImgPageRequestSelectedModel } from "../../types/Img2ImgPageRequestSelectedModel";
import { Img2ImgPageRequestSelectedControlnetModel } from "../../types/Img2ImgPageRequestSelectedControlnetModel";
import { RunSettings } from "../../types/RunSettings";

export const Img2ImgPageRequest: core.serialization.Schema<
    serializers.Img2ImgPageRequest.Raw,
    Omit<Gooey.Img2ImgPageRequest, "exampleId">
> = core.serialization.object({
    functions: core.serialization.list(RecipeFunction).optional(),
    variables: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    inputImage: core.serialization.property("input_image", core.serialization.string()),
    textPrompt: core.serialization.property("text_prompt", core.serialization.string().optional()),
    selectedModel: core.serialization.property("selected_model", Img2ImgPageRequestSelectedModel.optional()),
    selectedControlnetModel: core.serialization.property(
        "selected_controlnet_model",
        Img2ImgPageRequestSelectedControlnetModel.optional()
    ),
    negativePrompt: core.serialization.property("negative_prompt", core.serialization.string().optional()),
    numOutputs: core.serialization.property("num_outputs", core.serialization.number().optional()),
    quality: core.serialization.number().optional(),
    outputWidth: core.serialization.property("output_width", core.serialization.number().optional()),
    outputHeight: core.serialization.property("output_height", core.serialization.number().optional()),
    guidanceScale: core.serialization.property("guidance_scale", core.serialization.number().optional()),
    promptStrength: core.serialization.property("prompt_strength", core.serialization.number().optional()),
    controlnetConditioningScale: core.serialization.property(
        "controlnet_conditioning_scale",
        core.serialization.list(core.serialization.number()).optional()
    ),
    seed: core.serialization.number().optional(),
    imageGuidanceScale: core.serialization.property("image_guidance_scale", core.serialization.number().optional()),
    settings: RunSettings.optional(),
});

export declare namespace Img2ImgPageRequest {
    interface Raw {
        functions?: RecipeFunction.Raw[] | null;
        variables?: Record<string, unknown> | null;
        input_image: string;
        text_prompt?: string | null;
        selected_model?: Img2ImgPageRequestSelectedModel.Raw | null;
        selected_controlnet_model?: Img2ImgPageRequestSelectedControlnetModel.Raw | null;
        negative_prompt?: string | null;
        num_outputs?: number | null;
        quality?: number | null;
        output_width?: number | null;
        output_height?: number | null;
        guidance_scale?: number | null;
        prompt_strength?: number | null;
        controlnet_conditioning_scale?: number[] | null;
        seed?: number | null;
        image_guidance_scale?: number | null;
        settings?: RunSettings.Raw | null;
    }
}
