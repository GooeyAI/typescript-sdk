/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../index";
import * as Gooey from "../../../api/index";
import * as core from "../../../core";
import { RecipeFunction } from "../../types/RecipeFunction";
import { Vcard } from "../../types/Vcard";
import { QrCodeGeneratorPageRequestImagePromptControlnetModelsItem } from "../../types/QrCodeGeneratorPageRequestImagePromptControlnetModelsItem";
import { QrCodeGeneratorPageRequestSelectedModel } from "../../types/QrCodeGeneratorPageRequestSelectedModel";
import { QrCodeGeneratorPageRequestSelectedControlnetModelItem } from "../../types/QrCodeGeneratorPageRequestSelectedControlnetModelItem";
import { QrCodeGeneratorPageRequestScheduler } from "../../types/QrCodeGeneratorPageRequestScheduler";
import { RunSettings } from "../../types/RunSettings";

export const QrCodeGeneratorPageRequest: core.serialization.Schema<
    serializers.QrCodeGeneratorPageRequest.Raw,
    Omit<Gooey.QrCodeGeneratorPageRequest, "exampleId">
> = core.serialization.object({
    functions: core.serialization.list(RecipeFunction).optional(),
    variables: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    qrCodeData: core.serialization.property("qr_code_data", core.serialization.string().optional()),
    qrCodeInputImage: core.serialization.property("qr_code_input_image", core.serialization.string().optional()),
    qrCodeVcard: core.serialization.property("qr_code_vcard", Vcard.optional()),
    qrCodeFile: core.serialization.property("qr_code_file", core.serialization.string().optional()),
    useUrlShortener: core.serialization.property("use_url_shortener", core.serialization.boolean().optional()),
    textPrompt: core.serialization.property("text_prompt", core.serialization.string()),
    negativePrompt: core.serialization.property("negative_prompt", core.serialization.string().optional()),
    imagePrompt: core.serialization.property("image_prompt", core.serialization.string().optional()),
    imagePromptControlnetModels: core.serialization.property(
        "image_prompt_controlnet_models",
        core.serialization.list(QrCodeGeneratorPageRequestImagePromptControlnetModelsItem).optional()
    ),
    imagePromptStrength: core.serialization.property("image_prompt_strength", core.serialization.number().optional()),
    imagePromptScale: core.serialization.property("image_prompt_scale", core.serialization.number().optional()),
    imagePromptPosX: core.serialization.property("image_prompt_pos_x", core.serialization.number().optional()),
    imagePromptPosY: core.serialization.property("image_prompt_pos_y", core.serialization.number().optional()),
    selectedModel: core.serialization.property("selected_model", QrCodeGeneratorPageRequestSelectedModel.optional()),
    selectedControlnetModel: core.serialization.property(
        "selected_controlnet_model",
        core.serialization.list(QrCodeGeneratorPageRequestSelectedControlnetModelItem).optional()
    ),
    outputWidth: core.serialization.property("output_width", core.serialization.number().optional()),
    outputHeight: core.serialization.property("output_height", core.serialization.number().optional()),
    guidanceScale: core.serialization.property("guidance_scale", core.serialization.number().optional()),
    controlnetConditioningScale: core.serialization.property(
        "controlnet_conditioning_scale",
        core.serialization.list(core.serialization.number()).optional()
    ),
    numOutputs: core.serialization.property("num_outputs", core.serialization.number().optional()),
    quality: core.serialization.number().optional(),
    scheduler: QrCodeGeneratorPageRequestScheduler.optional(),
    seed: core.serialization.number().optional(),
    objScale: core.serialization.property("obj_scale", core.serialization.number().optional()),
    objPosX: core.serialization.property("obj_pos_x", core.serialization.number().optional()),
    objPosY: core.serialization.property("obj_pos_y", core.serialization.number().optional()),
    settings: RunSettings.optional(),
});

export declare namespace QrCodeGeneratorPageRequest {
    interface Raw {
        functions?: RecipeFunction.Raw[] | null;
        variables?: Record<string, unknown> | null;
        qr_code_data?: string | null;
        qr_code_input_image?: string | null;
        qr_code_vcard?: Vcard.Raw | null;
        qr_code_file?: string | null;
        use_url_shortener?: boolean | null;
        text_prompt: string;
        negative_prompt?: string | null;
        image_prompt?: string | null;
        image_prompt_controlnet_models?: QrCodeGeneratorPageRequestImagePromptControlnetModelsItem.Raw[] | null;
        image_prompt_strength?: number | null;
        image_prompt_scale?: number | null;
        image_prompt_pos_x?: number | null;
        image_prompt_pos_y?: number | null;
        selected_model?: QrCodeGeneratorPageRequestSelectedModel.Raw | null;
        selected_controlnet_model?: QrCodeGeneratorPageRequestSelectedControlnetModelItem.Raw[] | null;
        output_width?: number | null;
        output_height?: number | null;
        guidance_scale?: number | null;
        controlnet_conditioning_scale?: number[] | null;
        num_outputs?: number | null;
        quality?: number | null;
        scheduler?: QrCodeGeneratorPageRequestScheduler.Raw | null;
        seed?: number | null;
        obj_scale?: number | null;
        obj_pos_x?: number | null;
        obj_pos_y?: number | null;
        settings?: RunSettings.Raw | null;
    }
}
