/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Gooey from "../../api/index";
import * as core from "../../core";
import { CalledFunctionResponse } from "./CalledFunctionResponse";

export const SeoSummaryPageOutput: core.serialization.ObjectSchema<
    serializers.SeoSummaryPageOutput.Raw,
    Gooey.SeoSummaryPageOutput
> = core.serialization.object({
    outputContent: core.serialization.property("output_content", core.serialization.list(core.serialization.string())),
    serpResults: core.serialization.property(
        "serp_results",
        core.serialization.record(core.serialization.string(), core.serialization.unknown())
    ),
    searchUrls: core.serialization.property("search_urls", core.serialization.list(core.serialization.string())),
    summarizedUrls: core.serialization.property(
        "summarized_urls",
        core.serialization.list(core.serialization.record(core.serialization.string(), core.serialization.unknown()))
    ),
    finalPrompt: core.serialization.property("final_prompt", core.serialization.string()),
    calledFunctions: core.serialization.property(
        "called_functions",
        core.serialization.list(CalledFunctionResponse).optional()
    ),
});

export declare namespace SeoSummaryPageOutput {
    interface Raw {
        output_content: string[];
        serp_results: Record<string, unknown>;
        search_urls: string[];
        summarized_urls: Record<string, unknown>[];
        final_prompt: string;
        called_functions?: CalledFunctionResponse.Raw[] | null;
    }
}
