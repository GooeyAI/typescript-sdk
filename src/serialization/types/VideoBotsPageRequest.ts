/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Gooey from "../../api/index";
import * as core from "../../core";
import { RecipeFunction } from "./RecipeFunction";
import { ConversationEntry } from "./ConversationEntry";
import { VideoBotsPageRequestSelectedModel } from "./VideoBotsPageRequestSelectedModel";
import { VideoBotsPageRequestEmbeddingModel } from "./VideoBotsPageRequestEmbeddingModel";
import { VideoBotsPageRequestCitationStyle } from "./VideoBotsPageRequestCitationStyle";
import { VideoBotsPageRequestAsrModel } from "./VideoBotsPageRequestAsrModel";
import { VideoBotsPageRequestTranslationModel } from "./VideoBotsPageRequestTranslationModel";
import { VideoBotsPageRequestLipsyncModel } from "./VideoBotsPageRequestLipsyncModel";
import { LlmTools } from "./LlmTools";
import { VideoBotsPageRequestResponseFormatType } from "./VideoBotsPageRequestResponseFormatType";
import { VideoBotsPageRequestTtsProvider } from "./VideoBotsPageRequestTtsProvider";
import { VideoBotsPageRequestOpenaiVoiceName } from "./VideoBotsPageRequestOpenaiVoiceName";
import { VideoBotsPageRequestOpenaiTtsModel } from "./VideoBotsPageRequestOpenaiTtsModel";
import { SadTalkerSettings } from "./SadTalkerSettings";
import { RunSettings } from "./RunSettings";

export const VideoBotsPageRequest: core.serialization.ObjectSchema<
    serializers.VideoBotsPageRequest.Raw,
    Gooey.VideoBotsPageRequest
> = core.serialization.object({
    functions: core.serialization.list(RecipeFunction).optional(),
    variables: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    inputPrompt: core.serialization.property("input_prompt", core.serialization.string().optional()),
    inputAudio: core.serialization.property("input_audio", core.serialization.string().optional()),
    inputImages: core.serialization.property(
        "input_images",
        core.serialization.list(core.serialization.string()).optional()
    ),
    inputDocuments: core.serialization.property(
        "input_documents",
        core.serialization.list(core.serialization.string()).optional()
    ),
    docExtractUrl: core.serialization.property("doc_extract_url", core.serialization.string().optional()),
    messages: core.serialization.list(ConversationEntry).optional(),
    botScript: core.serialization.property("bot_script", core.serialization.string().optional()),
    selectedModel: core.serialization.property("selected_model", VideoBotsPageRequestSelectedModel.optional()),
    documentModel: core.serialization.property("document_model", core.serialization.string().optional()),
    taskInstructions: core.serialization.property("task_instructions", core.serialization.string().optional()),
    queryInstructions: core.serialization.property("query_instructions", core.serialization.string().optional()),
    keywordInstructions: core.serialization.property("keyword_instructions", core.serialization.string().optional()),
    documents: core.serialization.list(core.serialization.string()).optional(),
    maxReferences: core.serialization.property("max_references", core.serialization.number().optional()),
    maxContextWords: core.serialization.property("max_context_words", core.serialization.number().optional()),
    scrollJump: core.serialization.property("scroll_jump", core.serialization.number().optional()),
    embeddingModel: core.serialization.property("embedding_model", VideoBotsPageRequestEmbeddingModel.optional()),
    denseWeight: core.serialization.property("dense_weight", core.serialization.number().optional()),
    citationStyle: core.serialization.property("citation_style", VideoBotsPageRequestCitationStyle.optional()),
    useUrlShortener: core.serialization.property("use_url_shortener", core.serialization.boolean().optional()),
    asrModel: core.serialization.property("asr_model", VideoBotsPageRequestAsrModel.optional()),
    asrLanguage: core.serialization.property("asr_language", core.serialization.string().optional()),
    translationModel: core.serialization.property("translation_model", VideoBotsPageRequestTranslationModel.optional()),
    userLanguage: core.serialization.property("user_language", core.serialization.string().optional()),
    inputGlossaryDocument: core.serialization.property(
        "input_glossary_document",
        core.serialization.string().optional()
    ),
    outputGlossaryDocument: core.serialization.property(
        "output_glossary_document",
        core.serialization.string().optional()
    ),
    lipsyncModel: core.serialization.property("lipsync_model", VideoBotsPageRequestLipsyncModel.optional()),
    tools: core.serialization.list(LlmTools).optional(),
    avoidRepetition: core.serialization.property("avoid_repetition", core.serialization.boolean().optional()),
    numOutputs: core.serialization.property("num_outputs", core.serialization.number().optional()),
    quality: core.serialization.number().optional(),
    maxTokens: core.serialization.property("max_tokens", core.serialization.number().optional()),
    samplingTemperature: core.serialization.property("sampling_temperature", core.serialization.number().optional()),
    responseFormatType: core.serialization.property(
        "response_format_type",
        VideoBotsPageRequestResponseFormatType.optional()
    ),
    ttsProvider: core.serialization.property("tts_provider", VideoBotsPageRequestTtsProvider.optional()),
    uberduckVoiceName: core.serialization.property("uberduck_voice_name", core.serialization.string().optional()),
    uberduckSpeakingRate: core.serialization.property("uberduck_speaking_rate", core.serialization.number().optional()),
    googleVoiceName: core.serialization.property("google_voice_name", core.serialization.string().optional()),
    googleSpeakingRate: core.serialization.property("google_speaking_rate", core.serialization.number().optional()),
    googlePitch: core.serialization.property("google_pitch", core.serialization.number().optional()),
    barkHistoryPrompt: core.serialization.property("bark_history_prompt", core.serialization.string().optional()),
    elevenlabsVoiceName: core.serialization.property("elevenlabs_voice_name", core.serialization.string().optional()),
    elevenlabsApiKey: core.serialization.property("elevenlabs_api_key", core.serialization.string().optional()),
    elevenlabsVoiceId: core.serialization.property("elevenlabs_voice_id", core.serialization.string().optional()),
    elevenlabsModel: core.serialization.property("elevenlabs_model", core.serialization.string().optional()),
    elevenlabsStability: core.serialization.property("elevenlabs_stability", core.serialization.number().optional()),
    elevenlabsSimilarityBoost: core.serialization.property(
        "elevenlabs_similarity_boost",
        core.serialization.number().optional()
    ),
    elevenlabsStyle: core.serialization.property("elevenlabs_style", core.serialization.number().optional()),
    elevenlabsSpeakerBoost: core.serialization.property(
        "elevenlabs_speaker_boost",
        core.serialization.boolean().optional()
    ),
    azureVoiceName: core.serialization.property("azure_voice_name", core.serialization.string().optional()),
    openaiVoiceName: core.serialization.property("openai_voice_name", VideoBotsPageRequestOpenaiVoiceName.optional()),
    openaiTtsModel: core.serialization.property("openai_tts_model", VideoBotsPageRequestOpenaiTtsModel.optional()),
    inputFace: core.serialization.property("input_face", core.serialization.string().optional()),
    facePaddingTop: core.serialization.property("face_padding_top", core.serialization.number().optional()),
    facePaddingBottom: core.serialization.property("face_padding_bottom", core.serialization.number().optional()),
    facePaddingLeft: core.serialization.property("face_padding_left", core.serialization.number().optional()),
    facePaddingRight: core.serialization.property("face_padding_right", core.serialization.number().optional()),
    sadtalkerSettings: core.serialization.property("sadtalker_settings", SadTalkerSettings.optional()),
    settings: RunSettings.optional(),
});

export declare namespace VideoBotsPageRequest {
    interface Raw {
        functions?: RecipeFunction.Raw[] | null;
        variables?: Record<string, unknown> | null;
        input_prompt?: string | null;
        input_audio?: string | null;
        input_images?: string[] | null;
        input_documents?: string[] | null;
        doc_extract_url?: string | null;
        messages?: ConversationEntry.Raw[] | null;
        bot_script?: string | null;
        selected_model?: VideoBotsPageRequestSelectedModel.Raw | null;
        document_model?: string | null;
        task_instructions?: string | null;
        query_instructions?: string | null;
        keyword_instructions?: string | null;
        documents?: string[] | null;
        max_references?: number | null;
        max_context_words?: number | null;
        scroll_jump?: number | null;
        embedding_model?: VideoBotsPageRequestEmbeddingModel.Raw | null;
        dense_weight?: number | null;
        citation_style?: VideoBotsPageRequestCitationStyle.Raw | null;
        use_url_shortener?: boolean | null;
        asr_model?: VideoBotsPageRequestAsrModel.Raw | null;
        asr_language?: string | null;
        translation_model?: VideoBotsPageRequestTranslationModel.Raw | null;
        user_language?: string | null;
        input_glossary_document?: string | null;
        output_glossary_document?: string | null;
        lipsync_model?: VideoBotsPageRequestLipsyncModel.Raw | null;
        tools?: LlmTools.Raw[] | null;
        avoid_repetition?: boolean | null;
        num_outputs?: number | null;
        quality?: number | null;
        max_tokens?: number | null;
        sampling_temperature?: number | null;
        response_format_type?: VideoBotsPageRequestResponseFormatType.Raw | null;
        tts_provider?: VideoBotsPageRequestTtsProvider.Raw | null;
        uberduck_voice_name?: string | null;
        uberduck_speaking_rate?: number | null;
        google_voice_name?: string | null;
        google_speaking_rate?: number | null;
        google_pitch?: number | null;
        bark_history_prompt?: string | null;
        elevenlabs_voice_name?: string | null;
        elevenlabs_api_key?: string | null;
        elevenlabs_voice_id?: string | null;
        elevenlabs_model?: string | null;
        elevenlabs_stability?: number | null;
        elevenlabs_similarity_boost?: number | null;
        elevenlabs_style?: number | null;
        elevenlabs_speaker_boost?: boolean | null;
        azure_voice_name?: string | null;
        openai_voice_name?: VideoBotsPageRequestOpenaiVoiceName.Raw | null;
        openai_tts_model?: VideoBotsPageRequestOpenaiTtsModel.Raw | null;
        input_face?: string | null;
        face_padding_top?: number | null;
        face_padding_bottom?: number | null;
        face_padding_left?: number | null;
        face_padding_right?: number | null;
        sadtalker_settings?: SadTalkerSettings.Raw | null;
        settings?: RunSettings.Raw | null;
    }
}
