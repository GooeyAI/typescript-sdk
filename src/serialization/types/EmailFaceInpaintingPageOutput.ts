/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Gooey from "../../api/index";
import * as core from "../../core";
import { CalledFunctionResponse } from "./CalledFunctionResponse";

export const EmailFaceInpaintingPageOutput: core.serialization.ObjectSchema<
    serializers.EmailFaceInpaintingPageOutput.Raw,
    Gooey.EmailFaceInpaintingPageOutput
> = core.serialization.object({
    inputImage: core.serialization.property("input_image", core.serialization.string()),
    resizedImage: core.serialization.property("resized_image", core.serialization.string()),
    faceMask: core.serialization.property("face_mask", core.serialization.string()),
    diffusionImages: core.serialization.property(
        "diffusion_images",
        core.serialization.list(core.serialization.string())
    ),
    outputImages: core.serialization.property("output_images", core.serialization.list(core.serialization.string())),
    emailSent: core.serialization.property("email_sent", core.serialization.boolean().optional()),
    calledFunctions: core.serialization.property(
        "called_functions",
        core.serialization.list(CalledFunctionResponse).optional()
    ),
});

export declare namespace EmailFaceInpaintingPageOutput {
    interface Raw {
        input_image: string;
        resized_image: string;
        face_mask: string;
        diffusion_images: string[];
        output_images: string[];
        email_sent?: boolean | null;
        called_functions?: CalledFunctionResponse.Raw[] | null;
    }
}
