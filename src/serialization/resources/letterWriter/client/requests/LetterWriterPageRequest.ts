/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Gooey from "../../../../../api/index";
import * as core from "../../../../../core";
import { RecipeFunction } from "../../../../types/RecipeFunction";
import { TrainingDataModel } from "../../../../types/TrainingDataModel";
import { RunSettings } from "../../../../types/RunSettings";

export const LetterWriterPageRequest: core.serialization.Schema<
    serializers.LetterWriterPageRequest.Raw,
    Omit<Gooey.LetterWriterPageRequest, "exampleId">
> = core.serialization.object({
    functions: core.serialization.list(RecipeFunction).optional(),
    variables: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    actionId: core.serialization.property("action_id", core.serialization.string()),
    promptHeader: core.serialization.property("prompt_header", core.serialization.string().optional()),
    exampleLetters: core.serialization.property(
        "example_letters",
        core.serialization.list(TrainingDataModel).optional()
    ),
    lmSelectedApi: core.serialization.property("lm_selected_api", core.serialization.string().optional()),
    lmSelectedEngine: core.serialization.property("lm_selected_engine", core.serialization.string().optional()),
    numOutputs: core.serialization.property("num_outputs", core.serialization.number().optional()),
    quality: core.serialization.number().optional(),
    lmSamplingTemperature: core.serialization.property(
        "lm_sampling_temperature",
        core.serialization.number().optional()
    ),
    apiHttpMethod: core.serialization.property("api_http_method", core.serialization.string().optional()),
    apiUrl: core.serialization.property("api_url", core.serialization.string().optional()),
    apiHeaders: core.serialization.property("api_headers", core.serialization.string().optional()),
    apiJsonBody: core.serialization.property("api_json_body", core.serialization.string().optional()),
    inputPrompt: core.serialization.property("input_prompt", core.serialization.string().optional()),
    stripHtml2Text: core.serialization.property("strip_html_2_text", core.serialization.boolean().optional()),
    settings: RunSettings.optional(),
});

export declare namespace LetterWriterPageRequest {
    interface Raw {
        functions?: RecipeFunction.Raw[] | null;
        variables?: Record<string, unknown> | null;
        action_id: string;
        prompt_header?: string | null;
        example_letters?: TrainingDataModel.Raw[] | null;
        lm_selected_api?: string | null;
        lm_selected_engine?: string | null;
        num_outputs?: number | null;
        quality?: number | null;
        lm_sampling_temperature?: number | null;
        api_http_method?: string | null;
        api_url?: string | null;
        api_headers?: string | null;
        api_json_body?: string | null;
        input_prompt?: string | null;
        strip_html_2_text?: boolean | null;
        settings?: RunSettings.Raw | null;
    }
}
